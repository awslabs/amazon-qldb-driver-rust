// Code generated by software.amazon.smithy.rust.codegen.smithy-rs. DO NOT EDIT.
#[non_exhaustive]
pub struct SendCommandOutput {
    pub result_stream: smithy_http::event_stream::Receiver<
        crate::model::ResultStream,
        crate::error::SendCommandError,
    >,
}
impl std::fmt::Debug for SendCommandOutput {
    fn fmt(&self, f: &mut std::fmt::Formatter<'_>) -> std::fmt::Result {
        let mut formatter = f.debug_struct("SendCommandOutput");
        formatter.field("result_stream", &self.result_stream);
        formatter.finish()
    }
}
/// See [`SendCommandOutput`](crate::output::SendCommandOutput)
pub mod send_command_output {
    /// A builder for [`SendCommandOutput`](crate::output::SendCommandOutput)
    #[non_exhaustive]
    #[derive(std::default::Default, std::fmt::Debug)]
    pub struct Builder {
        pub(crate) result_stream: std::option::Option<
            smithy_http::event_stream::Receiver<
                crate::model::ResultStream,
                crate::error::SendCommandError,
            >,
        >,
    }
    impl Builder {
        pub fn result_stream(
            mut self,
            input: smithy_http::event_stream::Receiver<
                crate::model::ResultStream,
                crate::error::SendCommandError,
            >,
        ) -> Self {
            self.result_stream = Some(input);
            self
        }
        pub fn set_result_stream(
            mut self,
            input: std::option::Option<
                smithy_http::event_stream::Receiver<
                    crate::model::ResultStream,
                    crate::error::SendCommandError,
                >,
            >,
        ) -> Self {
            self.result_stream = input;
            self
        }
        /// Consumes the builder and constructs a [`SendCommandOutput`](crate::output::SendCommandOutput)
        pub fn build(
            self,
        ) -> std::result::Result<crate::output::SendCommandOutput, smithy_http::operation::BuildError>
        {
            Ok(
                crate::output::SendCommandOutput {
                    result_stream: self.result_stream
                        .ok_or(
                            smithy_http::operation::BuildError::MissingField { field: "result_stream", details: "result_stream was not specified but it is required when building SendCommandOutput"}
                        )?
                    ,
                }
            )
        }
    }
}
impl SendCommandOutput {
    /// Creates a new builder-style object to manufacture [`SendCommandOutput`](crate::output::SendCommandOutput)
    pub fn builder() -> crate::output::send_command_output::Builder {
        crate::output::send_command_output::Builder::default()
    }
}
